{"version":3,"sources":["utils/Api.js","utils/AuthApi.js","images/logo/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ImagePopup.js","components/InfoTooltip.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","images/popup/errorImage.svg","images/popup/successImage.svg","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","headers","this","_headers","_baseUrl","_sendRequest","newUserData","cardId","isLiked","userCardData","newUserAvatar","path","method","body","options","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","statusText","authorization","authApi","token","userData","Header","onSignOut","userEmail","useState","isBurgerOpen","setIsBurgerOpen","className","exact","onClick","src","logo","alt","to","CurrentUserContext","createContext","Card","card","onCardClick","onCardDeleteButtonClick","onCardLike","currentUser","useContext","isOwn","owner","_id","likes","some","like","likeButtonClassName","type","link","name","length","Main","onEditAvatar","onEditProfile","onAddCardClick","cards","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","title","isOpen","onClose","onSubmit","isLoading","buttonText","buttonLoadingText","children","isButtonDisabled","evt","target","currentTarget","noValidate","disabled","EditProfilePopup","onUpdateUser","setName","setAbout","isNameValid","setIsNameValid","isAboutValid","setIsAboutValid","nameValidationMessage","setNameValidationMessage","aboutValidationMessage","setAboutValidationMessage","setIsButtonDisabled","useEffect","preventDefault","id","placeholder","required","minLength","maxLength","onChange","value","validity","validationMessage","valid","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","isAvatarValid","setIsAvatarValid","avatarValidationMessage","setAvatarValidationMessage","current","ref","AddPlacePopup","onAddCard","setLink","isLinkValid","setIsLinkValid","linkValidationMessage","setLinkValidationMessage","ConfirmPopup","onCardDelete","ImagePopup","InfoTooltip","infoContent","image","text","Login","onLogin","email","setEmail","password","setPassword","autoComplete","Register","onRegister","ProtectedRoute","Component","component","props","loggedIn","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","setInfoContent","history","useHistory","handleUpdateCards","updatedCard","prevCardsState","closeAllPopups","jwt","localStorage","getItem","getLoginData","data","push","catch","err","console","log","tokenCheck","all","getUserData","getCards","handleEscClose","key","document","addEventListener","removeEventListener","Provider","removeItem","toggleCardLike","likedCard","onUpdateCards","signInUser","setItem","signUpUser","successImage","errorImage","addNewCard","newCard","finally","updateUserData","updateUserAvatar","userAvatar","deleteCard","deletedCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1ab9522.chunk.js","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  getCards() {\n    return this._sendRequest('/cards', 'GET');\n  }\n\n  getUserData() {\n    return this._sendRequest('/users/me', 'GET');\n  }\n\n  updateUserData(newUserData) {\n    return this._sendRequest('/users/me', 'PATCH', newUserData);\n  }\n\n  toggleCardLike(cardId, isLiked){\n    if(isLiked){\n      return this._sendRequest(`/cards/likes/${cardId}`, 'PUT');\n    } else {\n      return this._sendRequest(`/cards/likes/${cardId}`, 'DELETE');\n    }\n  }\n\n  addNewCard(userCardData) {\n    return this._sendRequest('/cards', 'POST', userCardData);\n  }\n\n  deleteCard(cardId) {\n    return this._sendRequest(`/cards/${cardId}`, 'DELETE');\n  }\n\n  updateUserAvatar(newUserAvatar) {\n    return this._sendRequest('/users/me/avatar', 'PATCH', newUserAvatar);\n  }\n\n  _sendRequest(path, method, body) {\n    const options = {\n      method,\n      headers: this._headers,\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    return fetch(`${this._baseUrl}${path}`, options).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n  headers: {\n    authorization: '4a378053-5042-44e1-a8f6-f02a12235a31',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","class AuthApi {\n  constructor({ baseUrl, headers }) {\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  getLoginData(token) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    };\n    return this._sendRequest('/users/me', 'GET', null, headers);\n  }\n\n  signUpUser(userData) {\n    return this._sendRequest('/signup', 'POST', userData);\n  }\n\n  signInUser(userData) {\n    return this._sendRequest('/signin', 'POST', userData);\n  }\n\n  _sendRequest(path, method, body, headers = this._headers ) {\n    const options = {\n      method,\n      headers,\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    return fetch(`${this._baseUrl}${path}`, options).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}: ${res.statusText}`);\n    });\n  }\n}\n\nconst authApi = new AuthApi({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default authApi;\n","export default __webpack_public_path__ + \"static/media/logo.b59368db.svg\";","import logo from '../images/logo/logo.svg';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport { useState } from 'react';\n\nfunction Header({ onSignOut, userEmail }) {\n  const [isBurgerOpen, setIsBurgerOpen] = useState(false);\n\n  function toggleBurger() {\n    setIsBurgerOpen(!isBurgerOpen);\n  }\n\n  return (\n    <header className=\"header page__section\">\n      <Route exact path=\"/\">\n        <div\n          className={`header__info-mobile ${\n            isBurgerOpen ? 'header__info-mobile_opened' : ''\n          }`}\n        >\n          <p className=\"header__email\">{userEmail}</p>\n          <button className=\"button header__button\" onClick={onSignOut}>\n            Выход\n          </button>\n        </div>\n      </Route>\n      <div className=\"header__container\">\n        <img className=\"logo\" src={logo} alt=\"Логотип Mesto Russia\" />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"header__info-desktop\">\n              <p className=\"header__email\">{userEmail}</p>\n              <button className=\"button header__button\" onClick={onSignOut}>\n                Выйти\n              </button>\n            </div>\n            <div\n              className={`header__info-burger ${\n                isBurgerOpen ? 'header__info-burger_close' : ''\n              }`}\n              onClick={toggleBurger}\n            ></div>\n          </Route>\n          <Route path=\"/signup\">\n            <Link className=\"header__link\" to=\"/signin\">\n              Войти\n            </Link>\n          </Route>\n          <Route path=\"/signin\">\n            <Link className=\"header__link\" to=\"/signup\">\n              Регистрация\n            </Link>\n          </Route>\n        </Switch>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import { createContext } from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext;\n","import { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction Card({\n  card,\n  onCardClick,\n  onCardDeleteButtonClick,\n  onCardLike\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const isOwn = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some((like) => like._id === currentUser._id);\n  const likeButtonClassName = (`button element__button-like ${\n    isLiked ? 'element__button-like_active' : ''\n  }`);\n\n  function handleCardClick() {\n    onCardClick(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDeleteButtonClick(card);\n  }\n\n  function handleCardLike() {\n    onCardLike(card);\n  }\n\n  return (\n    <article className=\"element\" key={card._id}>\n      {isOwn && (\n        <button\n          className=\"button element__button-trash\"\n          type=\"reset\"\n          onClick={handleDeleteClick}\n        ></button>\n      )}\n      <div className=\"element__image-container\">\n        <img\n          className=\"element__image\"\n          src={card.link}\n          alt={card.name}\n          onClick={handleCardClick}\n        />\n      </div>\n      <h2 className=\"element__title\">{card.name}</h2>\n      <div className=\"element__like-container\">\n        <button\n          onClick={handleCardLike}\n          className={likeButtonClassName}\n          type=\"button\"\n        ></button>\n        <span className=\"element__like-counter\">{card.likes.length}</span>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n","import { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Card from './Card';\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddCardClick,\n  onCardClick,\n  onCardDeleteButtonClick,\n  cards,\n  onCardLike,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content section page__section\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\">\n          <div className=\"profile__overlay\" onClick={onEditAvatar}></div>\n          <img\n            className=\"profile__image\"\n            src={currentUser.avatar}\n            alt=\"Аватар пользователя\"\n          />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__about\">{currentUser.about}</p>\n          <button\n            className=\"button profile__button-edit\"\n            type=\"button\"\n            onClick={onEditProfile}\n          ></button>\n        </div>\n        <button\n          className=\"button profile__button-add\"\n          type=\"button\"\n          onClick={onAddCardClick}\n        ></button>\n      </section>\n      <section className=\"elements\">\n        {cards.map((card) => (\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={onCardClick}\n            onCardDeleteButtonClick={onCardDeleteButtonClick}\n            onCardLike={onCardLike}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer section page__section\">\n      <p className=\"footer__copyright\">\n        &copy; {new Date().getFullYear()} Mesto Russia\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function PopupWithForm({\n  name,\n  title,\n  isOpen,\n  onClose,\n  onSubmit,\n  isLoading,\n  buttonText,\n  buttonLoadingText,\n  children,\n  isButtonDisabled,\n}) {\n\n  function handleOverlayClose(evt) {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <section\n      className={`popup ${isOpen ? 'popup_opened' : ''}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__container\">\n        <h2 className=\"popup__title\">{title}</h2>\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        ></button>\n        <form\n          className=\"popup__form\"\n          name={name}\n          noValidate\n          onSubmit={onSubmit}\n        >\n          {children}\n          <button\n            className={`button popup__button-submit ${\n              !isButtonDisabled? '' : 'popup__button-submit_disabled'\n            }`}\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            {isLoading ? buttonLoadingText : buttonText}\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [isAboutValid, setIsAboutValid] = useState(true);\n  const [nameValidationMessage, setNameValidationMessage] = useState('');\n  const [aboutValidationMessage, setAboutValidationMessage] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n    setNameValidationMessage('');\n    setAboutValidationMessage('');\n    setIsButtonDisabled(true);\n  }, [currentUser, isOpen]);\n\n  function handleNameInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setName(value);\n    setIsNameValid(validity.valid);\n    setNameValidationMessage(validationMessage);\n\n    if (!validity.valid) {\n      setIsButtonDisabled(true);\n    } else if (about && isAboutValid) {\n      setIsButtonDisabled(false);\n    }\n  }\n\n  function handleAboutInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setAbout(value);\n    setIsAboutValid(validity.valid);\n    setAboutValidationMessage(validationMessage);\n\n    if (!validity.valid) {\n      setIsButtonDisabled(true);\n    } else if (name && isNameValid) {\n      setIsButtonDisabled(false);\n    }\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Сохранить\"\n      buttonLoadingText=\"Сохранение...\"\n      isButtonDisabled={isButtonDisabled}\n    >\n      <input\n        id=\"name-input\"\n        className={`popup__input ${\n          nameValidationMessage ? 'popup__input_type_error' : ''\n        }`}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Имя\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        onChange={handleNameInput}\n        value={name || ''}\n      />\n      <span className=\"popup__error\">{nameValidationMessage}</span>\n      <input\n        id=\"about-input\"\n        className={`popup__input ${\n          aboutValidationMessage ? 'popup__input_type_error' : ''\n        }`}\n        type=\"text\"\n        name=\"about\"\n        placeholder=\"О себе\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        onChange={handleAboutInput}\n        value={about || ''}\n      />\n      <span className=\"popup__error\">{aboutValidationMessage}</span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef, useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  isLoading,\n}) {\n  const avatarRef = useRef();\n  const [isAvatarValid, setIsAvatarValid] = useState(false);\n  const [avatarValidationMessage, setAvatarValidationMessage] = useState('');\n\n  useEffect(() => {\n    avatarRef.current.value = '';\n    setIsAvatarValid(false);\n    setAvatarValidationMessage('');\n  }, [isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  function handleLinkInput(evt) {\n    const { validity, validationMessage } = evt.target;\n    setIsAvatarValid(validity.valid);\n    setAvatarValidationMessage(validationMessage);\n  }\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Сохранить\"\n      buttonLoadingText=\"Сохранение...\"\n      isButtonDisabled={!isAvatarValid}\n    >\n      <input\n        id=\"avatar-input\"\n        className={`popup__input ${\n          avatarValidationMessage? 'popup__input_type_error' : ''\n        }`}\n        type=\"url\"\n        name=\"avatar\"\n        placeholder=\"Ссылка на картинку\"\n        required\n        ref={avatarRef}\n        onChange={handleLinkInput}\n      />\n      <span\n        className=\"popup__error\"\n      >\n        {avatarValidationMessage}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({\n  isOpen,\n  onClose,\n  onAddCard,\n  isLoading,\n}) {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n  const [isNameValid, setIsNameValid] = useState(false);\n  const [isLinkValid, setIsLinkValid] = useState(false);\n  const [nameValidationMessage, setNameValidationMessage] = useState('');\n  const [linkValidationMessage, setLinkValidationMessage] = useState('');\n\n  useEffect(() => {\n    setName('');\n    setIsNameValid(false);\n    setNameValidationMessage('');\n    setLink('');\n    setIsLinkValid(false);\n    setLinkValidationMessage('');\n  }, [isOpen]);\n\n  function handleNameInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setName(value);\n    setIsNameValid(validity.valid);\n    setNameValidationMessage(validationMessage);\n  }\n\n  function handleLinkInput(evt) {\n    const { value, validity, validationMessage } = evt.target;\n\n    setLink(value);\n    setIsLinkValid(validity.valid);\n    setLinkValidationMessage(validationMessage);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddCard({\n      name,\n      link,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add-card\"\n      title=\"Новое место\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Создать\"\n      buttonLoadingText=\"Создание...\"\n      isButtonDisabled={!(isNameValid && isLinkValid)}\n    >\n      <input\n        id=\"name-picture-input\"\n        className={`popup__input ${\n          nameValidationMessage? 'popup__input_type_error' : ''\n        }`}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Название\"\n        required\n        minLength=\"2\"\n        maxLength=\"30\"\n        onChange={handleNameInput}\n        value={name}\n      />\n      <span\n        className=\"popup__error\"\n      >\n        {nameValidationMessage}\n      </span>\n      <input\n        id=\"link-input\"\n        className={`popup__input ${\n          linkValidationMessage? 'popup__input_type_error' : ''\n        }`}\n        type=\"url\"\n        name=\"link\"\n        placeholder=\"Ссылка на картинку\"\n        required\n        onChange={handleLinkInput}\n        value={link}\n      />\n      <span\n        className=\"popup__error\"\n      >\n        {linkValidationMessage}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import PopupWithForm from './PopupWithForm';\n\nfunction ConfirmPopup({\n  isOpen,\n  onClose,\n  onCardDelete,\n  isLoading\n}) {\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onCardDelete();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"confirm\"\n      title=\"Вы уверены?\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText=\"Да\"\n      buttonLoadingText =\"Удаление...\"\n      isButtonDisabled={false}\n    />\n  );\n}\n\nexport default ConfirmPopup;\n","function ImagePopup({ card, isOpen, onClose }) {\n\n  function handleOverlayClose(evt) {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <section\n      className={`popup preview-popup ${isOpen ? 'popup_opened' : ''}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"preview-popup__container\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        ></button>\n        <figure className=\"preview-popup__figure\">\n          <img\n            className=\"preview-popup__image\"\n            src={card.link}\n            alt={card.name}\n          />\n          <figcaption className=\"preview-popup__caption\">\n            {card.name}\n          </figcaption>\n        </figure>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","function InfoTooltip({ onClose, isOpen, infoContent }) {\n  function handleOverlayClose(evt) {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <section\n      className={`popup ${isOpen ? 'popup_opened' : ''}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__container\">\n        <button\n          className=\"button popup__button-close popup__button-close_position_center\"\n          type=\"button\"\n          onClick={onClose}\n        ></button>\n        <img\n          className=\"popup__image\"\n          src={infoContent.image}\n          alt=\"Статус регистрации\"\n        />\n        <p className=\"popup__text\">{infoContent.text}</p>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoTooltip;\n","import { useState } from 'react';\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleEmailInput(evt) {\n    setEmail(evt.target.value);\n  };\n\n  function handlePasswordInput(evt) {\n    setPassword(evt.target.value);\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    onLogin({\n      email,\n      password\n    });\n  };\n\n  return (\n    <section className=\"auth\">\n        <h1 className=\"auth__title\">Вход</h1>\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\n          <input\n            onChange={handleEmailInput}\n            className=\"auth__input\"\n            name=\"email\"\n            placeholder=\"Email\"\n            autoComplete=\"off\"\n            value={email}\n            type=\"email\"\n            required\n          ></input>\n          <input\n            onChange={handlePasswordInput}\n            className=\"auth__input\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            autoComplete=\"off\"\n            type=\"password\"\n            value={password}\n            required\n          ></input>\n          <button className=\"button auth__button-submit\" type=\"submit\">\n            Войти\n          </button>\n        </form>\n    </section>\n  );\n}\n\nexport default Login;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Register({ onRegister }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleEmailInput(evt) {\n    setEmail(evt.target.value);\n  };\n\n  function handlePasswordInput(evt) {\n    setPassword(evt.target.value);\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    onRegister({\n      email,\n      password\n    });\n  };\n\n  return (\n    <section className=\"auth\">\n        <h1 className=\"auth__title\">Регистрация</h1>\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\n          <input\n            onChange={handleEmailInput}\n            className=\"auth__input\"\n            name=\"email\"\n            placeholder=\"Email\"\n            autoComplete=\"off\"\n            value={email}\n            type=\"email\"\n            required\n          ></input>\n          <input\n            onChange={handlePasswordInput}\n            className=\"auth__input\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            autoComplete=\"off\"\n            type=\"password\"\n            value={password}\n            required\n          ></input>\n          <button className=\"button auth__button-submit\" type=\"submit\">\n            Зарегистрироваться\n          </button>\n          <div className=\"auth__container\">\n            <p className=\"auth__question\">\n              Уже зарегистрированы?&nbsp;\n              <Link to=\"signin\" className=\"auth__link\">\n                Войти\n              </Link>\n            </p>\n          </div>\n        </form>\n    </section>\n  );\n}\n\nexport default Register;\n","import { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./login\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/errorImage.b7ee8d28.svg\";","export default __webpack_public_path__ + \"static/media/successImage.152ad707.svg\";","import { useState, useEffect } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport api from '../utils/Api';\nimport authApi from '../utils/AuthApi';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport errorImage from '../images/popup/errorImage.svg';\nimport successImage from '../images/popup/successImage.svg';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [infoContent, setInfoContent] = useState({\n    image: '',\n    text: '',\n  });\n  const history = useHistory();\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleCardImageClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function handleDeleteCardClick(card) {\n    setSelectedCard(card);\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleUpdateCards(updatedCard) {\n    setCards((prevCardsState) =>\n      prevCardsState.map((card) =>\n        card._id === updatedCard._id ? updatedCard : card\n      )\n    );\n  }\n\n  function handleUpdateCardsList(deletedCard) {\n    setCards((prevCardsState) =>\n      prevCardsState.filter((card) => card._id !== deletedCard._id)\n    );\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  useEffect(() => {\n    function tokenCheck() {\n      const jwt = localStorage.getItem('jwt');\n      if (jwt) {\n        authApi\n          .getLoginData(jwt)\n          .then((res) => {\n            if (res.data.email) {\n              setEmail(res.data.email);\n              setLoggedIn(true);\n              history.push('/');\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    }\n\n    tokenCheck();\n  }, [history]);\n\n  function handleSignInSubmit(userData) {\n    authApi\n      .signInUser(userData)\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem('jwt', res.token);\n          setLoggedIn(true);\n          setEmail(userData.email);\n          history.push('/');\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleSignUpSubmit(userData) {\n    authApi\n      .signUpUser(userData)\n      .then((res) => {\n        if (res.data.email) {\n          setIsInfoTooltipOpen(true);\n          setInfoContent({\n            image: successImage,\n            text: 'Вы успешно зарегистрировались!',\n          });\n          history.push('/signin');\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipOpen(true);\n        setInfoContent({\n          image: errorImage,\n          text: 'Что-то пошло не так! Попробуйте еще раз.',\n        });\n        console.log(err);\n      });\n  }\n\n  function handleSignOutClick() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    history.push('/signin');\n  }\n\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([api.getUserData(), api.getCards()])\n        .then(([userData, cards]) => {\n          setCurrentUser(userData);\n          setCards(cards);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [loggedIn]);\n\n  function handleUpdateUser(newUserData) {\n    setIsLoading(true);\n    api\n      .updateUserData(newUserData)\n      .then((userData) => {\n        setCurrentUser(userData);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleUpdateUserAvatar(newUserAvatar) {\n    setIsLoading(true);\n    api\n      .updateUserAvatar(newUserAvatar)\n      .then((userAvatar) => {\n        setCurrentUser(userAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleAddCardSubmit(userCardData) {\n    setIsLoading(true);\n    api\n      .addNewCard(userCardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((like) => like._id === currentUser._id);\n    api\n      .toggleCardLike(card._id, !isLiked)\n      .then((likedCard) => {\n        handleUpdateCards(likedCard);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete() {\n    setIsLoading(true);\n    api\n      .deleteCard(selectedCard._id)\n      .then(() => {\n        handleUpdateCardsList(selectedCard);\n        setIsConfirmPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    function handleEscClose(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header userEmail={email} onSignOut={handleSignOutClick} />\n        <Switch>\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            onEditProfile={handleEditProfileClick}\n            onAddCardClick={handleAddCardClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardImageClick}\n            onCardDeleteButtonClick={handleDeleteCardClick}\n            onCardLike={handleCardLike}\n            onUpdateCards={handleUpdateCards}\n            cards={cards}\n          />\n          <Route path=\"/signin\">\n            <Login onLogin={handleSignInSubmit} />\n          </Route>\n          <Route path=\"/signup\">\n            <Register onRegister={handleSignUpSubmit} />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n        </Switch>\n        {loggedIn && <Footer />}\n        <AddPlacePopup\n          isOpen={isAddCardPopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddCardSubmit}\n          isLoading={isLoading}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateUserAvatar}\n          isLoading={isLoading}\n        />\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n          isLoading={isLoading}\n        />\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          infoContent={infoContent}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}